name: Release to npm and update repository

on: workflow_call

env:
  API_FILE: 'docs/parsedJson.json'

jobs:
  deploy-prep:
    name: Prepare for release
    runs-on: ubuntu-latest
    steps:
      - name: Generate a temporary branch name for merge PR
        id: generate-branch-name
        run: |
          echo "BRANCH_NAME=temp/release-merge-$(date +%s)" >> "$GITHUB_OUTPUT"
    outputs:
      branch_name: ${{ steps.generate-branch-name.outputs.BRANCH_NAME }}

  deploy:
    name: Publish to Amplify Package
    runs-on: ubuntu-latest
    needs: deploy-prep
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          path: amplify-js
          token: ${{ secrets.GH_TOKEN_AMPLIFY_JS_WRITE }}
          # Minimal depth 0 so we can fetch all git tags.
          fetch-depth: 0

      - name: Setup node and build the repository
        uses: ./amplify-js/.github/actions/node-and-build

      - name: Run npm publish
        uses: ./amplify-js/.github/actions/npm-publish
        with:
          target: release
          npm_token: ${{ secrets.NPM_TOKEN }}
          github_user: ${{ vars.GH_USER}}
          github_email: ${{ vars.GH_EMAIL}}

      - name: Set github commit user
        env:
          GITHUB_EMAIL: ${{ vars.GH_EMAIL }}
          GITHUB_USER: ${{ vars.GH_USER }}
        run: |
          git config --global user.email $GITHUB_EMAIL
          git config --global user.name $GITHUB_USER

      - name: Update roll-back infrastructure
        working-directory: ./amplify-js
        run: |
          git pull origin release
          PUBLISH_COMMIT_HASH=$(git log -n 1 --pretty=format:"%H")
          RELEASE_COMMIT_MESSAGE=$(git log -n 1 --skip 1 --pretty=oneline)
          if [[ $RELEASE_COMMIT_MESSAGE = *release\(required\)* ]]; then git tag -f required-release $PUBLISH_COMMIT_HASH; fi

      # Generate API docs JSON file
      - name: Update API documentation
        working-directory: ./amplify-js
        run: |
          yarn run docs
          git add ./docs/api/

      # Check if the API Docs have been updated
      - name: Check for updated api docs
        working-directory: ./amplify-js
        id: api_docs_updated
        run: |
          if git diff --cached --quiet -- ${{ env.API_FILE }}; then
            echo "API docs have not changed"
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "API docs have been updated"
          fi

      # Commit docs changes
      - name: Commit docs changes
        working-directory: ./amplify-js
        run: |
          git commit -m "chore(release): Update API docs [skip release]"

      # configure aws credentials
      - name: Configure AWS Credentials
        if: steps.api_docs_updated.outputs.updated == 'true'
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ vars.DOCS_ROLE }}
          aws-region: ${{ vars.DOCS_REGION }}

      # Read secrets from secrets manager
      - name: Read secrets from AWS Secrets Manager into environment variables
        if: steps.api_docs_updated.outputs.updated == 'true'
        uses: aws-actions/aws-secretsmanager-get-secrets@ff26a0aa6bd4dd5e51326b5afb3f5f6874c958c7 # v2.0.3
        with:
          secret-ids: |
            DOCS_REPO_TOKEN
          parse-json-secrets: true

      # Post dispatch action with docs repo
      - name: Fire event
        if: steps.api_docs_updated.outputs.updated == 'true'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ env.DOCS_REPO_TOKEN_DOCS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/aws-amplify/docs/dispatches \
            -d '{"event_type":"update-references"}'

      # Fail this step if api docs have not been updated but continue running the workflow
      - name: API Docs not updated
        if: steps.api_docs_updated.outputs.updated == 'false'
        run: |
          echo "API Docs Have not been updated if API changes have been made please verify they are in the release"
          exit 1
        continue-on-error: true

      - name: Push post release changes to the release branch
        working-directory: ./amplify-js
        run: |
          git push origin release
          if [ $(git tag -l "required-release") ]; then git push -f origin required-release; fi

      - name: Create a PR to merge temporary release branch into main development branch
        working-directory: ./amplify-js
        env:
          TEMP_BRANCH_NAME: ${{ needs.deploy-prep.outputs.branch_name }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AMPLIFY_JS_WRITE }}
        run: |
          git checkout -b $TEMP_BRANCH_NAME
          git push origin $TEMP_BRANCH_NAME
          gh pr create -B main -H $TEMP_BRANCH_NAME --title 'chore: Merge release into main' --body 'Merge the recently completed release back into the main development branch. Generated by the callable-npm-publish-release workflow.'
